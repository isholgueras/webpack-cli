"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[502],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=i,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(g,a(a({ref:t},d),{},{components:n})):r.createElement(g,a({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4474:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return d},default:function(){return u}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],l={sidebar_position:5,title:"Translating Widgets"},c=void 0,s={unversionedId:"i18n",id:"i18n",isDocsHomePage:!1,title:"Translating Widgets",description:"In order to translate your widget fully you need to make translatable:",source:"@site/docs/i18n.md",sourceDirName:".",slug:"/i18n",permalink:"/webpack-cli/docs/i18n",editUrl:"https://github.com/js-widgets/webpack-cli/edit/main/website/docs/i18n.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Translating Widgets"},sidebar:"tutorialSidebar",previous:{title:"Widget Instances",permalink:"/webpack-cli/docs/integration/widget-instances"}},d=[{value:"The JS component",id:"the-js-component",children:[]},{value:"The editorial input",id:"the-editorial-input",children:[]}],p={toc:d};function u(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In order to translate your widget fully you need to make translatable:"),(0,o.kt)("h2",{id:"the-js-component"},"The JS component"),(0,o.kt)("p",null,"The JavaScript component powering the widget. This is usually interface text. Each framework has their own way (or\nmultiple) to translate components. Refer to their documentation to handle translation."),(0,o.kt)("p",null,"The CMS is in charge of providing the language code that the widget should be rendered in. Widget developers can trigger\ntranslation in the ",(0,o.kt)("a",{parentName:"p",href:"./registry/render-file"},"render file"),"."),(0,o.kt)("p",null,"Take this React example of the render file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/components/notification/index.js"',title:'"src/components/notification/index.js"'},"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport ToastNotification from './components/Widget';\nimport * as serviceWorker from './core/bin/serviceWorker';\n// highlight-next-line\nimport { IntlProvider } from 'react-intl';\nimport i18n from './core/bin/i18n.js';\n\n/**\n * Renders the widget.\n *\n * It renders a react application as the widget.\n *\n * @param {string} instanceId\n *   The already present HTML element ID where the react app will be rendered.\n * @param {string} langCode\n *   The language code for internationalization purposes.\n * @param {string} origin\n *   Protocol and hostname where a JSONAPI endpoint is available.\n * @param {Function} cb\n *   A callback that executes after the widget has been rendered.\n */\nfunction render(instanceId, langCode, origin, cb) {\n  const element = document.getElementById(instanceId);\n  // highlight-next-line\n  const translation = new i18n(langCode || serviceWorker.getUrlLocale());\n\n  ReactDOM.render(\n    <React.StrictMode>\n      // highlight-next-line\n      <IntlProvider locale={translation.locale} messages={translation.messages}>\n        <ToastNotification\n          title={element.getAttribute('data-title')}\n          subtitle={element.getAttribute('data-description')}\n          caption={element.getAttribute('data-caption')}\n          kind={element.getAttribute('data-kind')}\n        />\n      // highlight-next-line\n      </IntlProvider>\n    </React.StrictMode>,\n    element,\n    () => cb(element),\n  );\n  serviceWorker.unregister();\n}\n\nwindow.renderToastNotification = render;\n")),(0,o.kt)("h2",{id:"the-editorial-input"},"The editorial input"),(0,o.kt)("p",null,"The editorial input needs to be handled at the CMS integration level. As a widget developer, there is nothing you can\ndo. This is because you only feed the data the CMS gives you (as data attributes) in the component props. The CMS should\ngive you the data translated in the correct language."),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://www.drupal.org/project/widget_instance"},"Drupal integration")," has full support for editorial input\ntranslation."))}u.isMDXComponent=!0}}]);