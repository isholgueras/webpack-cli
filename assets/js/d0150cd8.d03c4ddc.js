"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[375],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return f}});var i=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,i,r=function(t,e){if(null==t)return{};var n,i,r={},o=Object.keys(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)n=o[i],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var c=i.createContext({}),l=function(t){var e=i.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=l(t.components);return i.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},d=i.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,c=t.parentName,p=s(t,["components","mdxType","originalType","parentName"]),d=l(n),f=r,h=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(h,a(a({ref:e},p),{},{components:n})):i.createElement(h,a({ref:e},p))}));function f(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:r,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6742:function(t,e,n){n.d(e,{Z:function(){return f}});var i=n(3366),r=n(7294),o=n(3727),a=n(2263),s=n(3919),c=n(412),l=(0,r.createContext)({collectLink:function(){}}),p=n(4996),u=n(8780),d=["isNavLink","to","href","activeClassName","isActive","data-noBrokenLinkCheck","autoAddBaseUrl"];var f=function(t){var e,n,f=t.isNavLink,h=t.to,m=t.href,g=t.activeClassName,k=t.isActive,b=t["data-noBrokenLinkCheck"],w=t.autoAddBaseUrl,y=void 0===w||w,v=(0,i.Z)(t,d),N=(0,a.Z)().siteConfig,j=N.trailingSlash,O=N.baseUrl,C=(0,p.C)().withBaseUrl,S=(0,r.useContext)(l),T=h||m,x=(0,s.Z)(T),P=null==T?void 0:T.replace("pathname://",""),_=void 0!==P?(n=P,y&&function(t){return t.startsWith("/")}(n)?C(n):n):void 0;_&&x&&(_=(0,u.applyTrailingSlash)(_,{trailingSlash:j,baseUrl:O}));var M,D=(0,r.useRef)(!1),Z=f?o.OL:o.rU,E=c.Z.canUseIntersectionObserver;(0,r.useEffect)((function(){return!E&&x&&null!=_&&window.docusaurus.prefetch(_),function(){E&&M&&M.disconnect()}}),[_,E,x]);var U=null!==(e=null==_?void 0:_.startsWith("#"))&&void 0!==e&&e,W=!_||!x||U;return _&&x&&!U&&!b&&S.collectLink(_),W?r.createElement("a",Object.assign({href:_},T&&!x&&{target:"_blank",rel:"noopener noreferrer"},v)):r.createElement(Z,Object.assign({},v,{onMouseEnter:function(){D.current||null==_||(window.docusaurus.preload(_),D.current=!0)},innerRef:function(t){var e,n;E&&t&&x&&(e=t,n=function(){null!=_&&window.docusaurus.prefetch(_)},(M=new window.IntersectionObserver((function(t){t.forEach((function(t){e===t.target&&(t.isIntersecting||t.intersectionRatio>0)&&(M.unobserve(e),M.disconnect(),n())}))}))).observe(e))},to:_||""},f&&{isActive:k,activeClassName:g}))}},3919:function(t,e,n){function i(t){return!0===/^(\w*:|\/\/)/.test(t)}function r(t){return void 0!==t&&!i(t)}n.d(e,{b:function(){return i},Z:function(){return r}})},4996:function(t,e,n){n.d(e,{C:function(){return o},Z:function(){return a}});var i=n(2263),r=n(3919);function o(){var t=(0,i.Z)().siteConfig,e=(t=void 0===t?{}:t).baseUrl,n=void 0===e?"/":e,o=t.url;return{withBaseUrl:function(t,e){return function(t,e,n,i){var o=void 0===i?{}:i,a=o.forcePrependBaseUrl,s=void 0!==a&&a,c=o.absolute,l=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,r.b)(n))return n;if(s)return e+n;var p=n.startsWith(e)?n:e+n.replace(/^\//,"");return l?t+p:p}(o,n,t,e)}}}function a(t,e){return void 0===e&&(e={}),(0,o().withBaseUrl)(t,e)}},8802:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t,e){var n=e.trailingSlash,i=e.baseUrl;if(t.startsWith("#"))return t;if(void 0===n)return t;var r,o=t.split(/[#?]/)[0],a="/"===o||o===i?o:(r=o,n?function(t){return t.endsWith("/")?t:t+"/"}(r):function(t){return t.endsWith("/")?t.slice(0,-1):t}(r));return t.replace(o,a)}},8780:function(t,e,n){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.uniq=e.applyTrailingSlash=void 0;var r=n(8802);Object.defineProperty(e,"applyTrailingSlash",{enumerable:!0,get:function(){return i(r).default}});var o=n(9964);Object.defineProperty(e,"uniq",{enumerable:!0,get:function(){return i(o).default}})},9964:function(t,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(t){return Array.from(new Set(t))}},2695:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return f}});var i=n(7462),r=n(3366),o=(n(7294),n(3905)),a=n(6742),s=["components"],c={sidebar_position:3,title:"1.2. Widget Definition"},l=void 0,p={unversionedId:"registry/widget-definition",id:"registry/widget-definition",isDocsHomePage:!1,title:"1.2. Widget Definition",description:"Once you have configured the registry it's time to create a widget definitions for one of",source:"@site/docs/registry/widget-definition.mdx",sourceDirName:"registry",slug:"/registry/widget-definition",permalink:"/webpack-cli/docs/registry/widget-definition",editUrl:"https://github.com/js-widgets/webpack-cli/edit/main/website/docs/registry/widget-definition.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"1.2. Widget Definition"},sidebar:"tutorialSidebar",previous:{title:"webpackFinal",permalink:"/webpack-cli/docs/registry/config/options/webpackFinal"},next:{title:"1.3. Render File",permalink:"/webpack-cli/docs/registry/render-file"}},u=[{value:"Widget Definition File",id:"widget-definition-file",children:[]},{value:"Configurable Options",id:"configurable-options",children:[]}],d={toc:u};function f(t){var e=t.components,c=(0,r.Z)(t,s);return(0,o.kt)("wrapper",(0,i.Z)({},d,c,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Once you have ",(0,o.kt)("a",{parentName:"p",href:"./config/declare-registry"},"configured the registry")," it's time to create a widget definitions for one of\nyour components."),(0,o.kt)("p",null,"Imagine you have a ",(0,o.kt)("em",{parentName:"p"},"Toast Notification")," component, ",(0,o.kt)("a",{parentName:"p",href:"https://www.carbondesignsystem.com/components/notification/usage#toast-notifications"},"like this one"),". This is what it looks like in Storybook:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Toast Notification in Storybook",src:n(9790).Z})),(0,o.kt)("h2",{id:"widget-definition-file"},"Widget Definition File"),(0,o.kt)("p",null,"Widget definition files are the files matched by ",(0,o.kt)("a",{parentName:"p",href:"config/options/register"},"the ",(0,o.kt)("inlineCode",{parentName:"a"},"register")," pattern")," in the registry\nconfiguration. They usually match the pattern ",(0,o.kt)("inlineCode",{parentName:"p"},"*.widget.js"),". So if we want to create a widget for the notification, we\nwill need to create ",(0,o.kt)("inlineCode",{parentName:"p"},"src/components/notification/toast-notification.widget.js"),". This leaves us with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"src/components/notification/toast-notification.ts\nsrc/components/notification/toast-notification.scss\n// highlight-next-line\nsrc/components/notification/toast-notification.widget.js\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/components/notification/toast-notification.widget.js"',title:'"src/components/notification/toast-notification.widget.js"'},"const path = require('path');\n\nmodule.exports = {\n  entry: path.join(__dirname, 'render-toast-notification.js'),\n  shortcode: 'toast-notification',\n  title: 'Toast Notification',\n  description: 'A notification element with a bit more context than the inline notification.',\n  status: 'wip'\n};\n")),(0,o.kt)("p",null,"All the options are described in the schema and documented in ",(0,o.kt)("a",{parentName:"p",href:"https://js-widgets.github.io/js-widgets/registry-schema/"},"its own documentation site"),"."),(0,o.kt)(a.Z,{className:"button button--secondary button--lg",to:"https://js-widgets.github.io/js-widgets/registry-schema/",mdxType:"Link"},"Documentation Site"),(0,o.kt)("h2",{id:"configurable-options"},"Configurable Options"),(0,o.kt)("p",null,"One of the most powerful features of widgets is that they allow JS developers to expose component props to CMS\neditors."),(0,o.kt)("p",null,"In our ",(0,o.kt)("em",{parentName:"p"},"Toast Notification")," example this translate in letting editors choose the ",(0,o.kt)("inlineCode",{parentName:"p"},"title")," of the notification, the\n",(0,o.kt)("inlineCode",{parentName:"p"},"body"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"caption"),", and the notification ",(0,o.kt)("inlineCode",{parentName:"p"},"kind"),"."),(0,o.kt)("p",null,"These options are defined in the widget definition file. As a widget developer you need to describe the input CMS\neditors will have available. Then in the ",(0,o.kt)("a",{parentName:"p",href:"./render-file"},(0,o.kt)("em",{parentName:"a"},"render file"))," you will take that eventual editorial input\nand feed it to the component."),(0,o.kt)("p",null,"The widget definition file needs to contain the necessary information for the CMS integration to render a form. The CMS\nwill be responsible to parse the widget registry, take the section for the widget definition, inspect the\n",(0,o.kt)("inlineCode",{parentName:"p"},"settingsSchema")," property, and present a form to the editor appropriate to collect that input."),(0,o.kt)("p",null,"The syntax to describe the configurable options is the ",(0,o.kt)("a",{parentName:"p",href:"https://json-schema.org"},"JSON Schema standard"),"."),(0,o.kt)("p",null,"Let's add three text boxes and one radio button to collect the ",(0,o.kt)("em",{parentName:"p"},"Toast Notification")," options."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/components/notification/toast-notification.widget.js"',title:'"src/components/notification/toast-notification.widget.js"'},"const path = require('path');\n\nmodule.exports = {\n  entry: path.join(__dirname, 'render-toast-notification.js'),\n  shortcode: 'toast-notification',\n  title: 'Toast Notification',\n  description: 'A notification element with a bit more context than the inline notification.',\n  status: 'wip',\n  // highlight-start\n  settingsSchema: {\n    type: 'object',\n    additionalProperties: false,\n    properties: {\n      fields: {\n        type: 'object',\n        required: ['title'],\n        properties: {\n          title: {\n            type: 'string',\n            maxLength: 255,\n            title: 'Title',\n            description: 'Main label for the notification.',\n          },\n          description: {\n            type: 'string',\n            title: 'Body',\n            description: 'Longer context for the notification message.',\n          },\n          caption: {\n            type: 'string',\n            title: 'Caption',\n          },\n          kind: {\n            type: 'string',\n            title: 'Notification kind',\n            enum: ['success', 'info', 'warning', 'error'],\n          },\n        },\n      },\n    },\n  },\n  // highlight-end\n};\n")),(0,o.kt)("p",null,"This will end up on the CMS as:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Settings schema rendered in CMS",src:n(3103).Z})),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Properties:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://js-widgets.github.io/js-widgets/registry-schema/#items_shortcode"},(0,o.kt)("inlineCode",{parentName:"a"},"shortcode"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://js-widgets.github.io/js-widgets/registry-schema/#items_title"},(0,o.kt)("inlineCode",{parentName:"a"},"title"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://js-widgets.github.io/js-widgets/registry-schema/#items_description"},(0,o.kt)("inlineCode",{parentName:"a"},"description"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://js-widgets.github.io/js-widgets/registry-schema/#items_status"},(0,o.kt)("inlineCode",{parentName:"a"},"status"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://js-widgets.github.io/js-widgets/registry-schema/#items_settingsSchema"},(0,o.kt)("inlineCode",{parentName:"a"},"settingsSchema"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"entry"),": the path to ",(0,o.kt)("a",{parentName:"li",href:"./render-file"},"the render file")," for the component.")))}f.isMDXComponent=!0},9790:function(t,e,n){e.Z=n.p+"assets/images/storybook-toast-b32c16f539b388747da7dfe0e03c580a.png"},3103:function(t,e,n){e.Z=n.p+"assets/images/settings-schema-options-3f92fb5e12d8388016fbc96465ebee43.png"}}]);