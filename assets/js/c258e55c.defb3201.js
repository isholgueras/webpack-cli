"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[518],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=l(n),u=i,g=m["".concat(s,".").concat(u)]||m[u]||p[u]||a;return n?r.createElement(g,o(o({ref:t},d),{},{components:n})):r.createElement(g,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5929:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return d},default:function(){return m}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],c={sidebar_position:4,title:"Render File"},s=void 0,l={unversionedId:"registry/render-file",id:"registry/render-file",isDocsHomePage:!1,title:"Render File",description:"Widgets are stand alone JS applications, but a component library only has components. To bridge that gap we need to",source:"@site/docs/registry/render-file.md",sourceDirName:"registry",slug:"/registry/render-file",permalink:"/webpack-cli/docs/registry/render-file",editUrl:"https://github.com/js-widgets/webpack-cli/edit/main/website/docs/registry/render-file.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Render File"},sidebar:"tutorialSidebar",previous:{title:"Widget Definition",permalink:"/webpack-cli/docs/registry/widget-definition"},next:{title:"add-widget-registry-sources",permalink:"/webpack-cli/docs/integration/add-widget-registry-sources"}},d=[{value:"Web Components",id:"web-components",children:[]},{value:"React",id:"react",children:[]}],p={toc:d};function m(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Widgets are stand alone JS applications, but a component library only has components. To bridge that gap we need to\ncreate a render file. This is a file that will render a component in a ",(0,a.kt)("inlineCode",{parentName:"p"},"<div>")," that the CMS will print on the page. The\nJavaScript application will render inside that ",(0,a.kt)("inlineCode",{parentName:"p"},"<div>"),"."),(0,a.kt)("p",null,"Rendering a component is heavily dependent on the JS framework you are using. This step will look different for React,\nVue, Angular, Web Components, ..."),(0,a.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Check the render function name!")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"All the render files contain ",(0,a.kt)("inlineCode",{parentName:"p"},"window.renderXXXX"),", where ",(0,a.kt)("inlineCode",{parentName:"p"},"XXXX")," needs to be the same as the ",(0,a.kt)("a",{parentName:"p",href:"./widget-definition"},(0,a.kt)("inlineCode",{parentName:"a"},"shortcode")," property")," in ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Camel_case"},"camel case"),"."))),(0,a.kt)("h2",{id:"web-components"},"Web Components"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/components/notification/render-toast-notification.js"',title:'"src/components/notification/render-toast-notification.js"'},"require('./toast-notification');\n\n/**\n * Renders the widget.\n *\n * It renders a react application as the widget.\n *\n * @param {string} instanceId\n *   The already present HTML element ID where the react app will be rendered.\n * @param {string} langCode\n *   The language code for internationalization purposes.\n * @param {string} origin\n *   Protocol and hostname where a JSONAPI endpoint is available.\n * @param {Function} cb\n *   A callback that executes after the widget has been rendered.\n */\nconst render = (instanceId, langCode, origin, cb) => {\n  const element = document.getElementById(instanceId);\n  if (!element) {\n    return;\n  }\n  // Just print the custom HTML element inside of the div and call the callback.\n  element.innerHTML = `<bx-toast-notification\n    title=\"${element.getAttribute('data-title')}\"\n    subtitle=\"${element.getAttribute('data-description')}\"\n    caption=\"${element.getAttribute('data-caption')}\"\n    kind=\"${element.getAttribute('data-kind')}\"\n  />`;\n  // Execute the callback so the parent process knows we are done rendering.\n  cb(element);\n};\n\nwindow.renderToastNotification = render;\n")),(0,a.kt)("h2",{id:"react"},"React"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="src/components/notification/render-toast-notification.js"',title:'"src/components/notification/render-toast-notification.js"'},"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport ToastNotification from './components/Widget';\nimport * as serviceWorker from './core/bin/serviceWorker';\nimport { IntlProvider } from 'react-intl';\nimport i18n from './core/bin/i18n.js';\n\n/**\n * Renders the widget.\n *\n * It renders a react application as the widget.\n *\n * @param {string} instanceId\n *   The already present HTML element ID where the react app will be rendered.\n * @param {string} langCode\n *   The language code for internationalization purposes.\n * @param {string} origin\n *   Protocol and hostname where a JSONAPI endpoint is available.\n * @param {Function} cb\n *   A callback that executes after the widget has been rendered.\n */\nfunction render(instanceId, langCode, origin, cb) {\n  const element = document.getElementById(instanceId);\n  const translation = new i18n(langCode || serviceWorker.getUrlLocale());\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <IntlProvider locale={translation.locale} messages={translation.messages}>\n        <ToastNotification\n          title={element.getAttribute('data-title')}\n          subtitle={element.getAttribute('data-description')}\n          caption={element.getAttribute('data-caption')}\n          kind={element.getAttribute('data-kind')}\n        />\n      </IntlProvider>\n    </React.StrictMode>,\n    element,\n    () => cb(element),\n  );\n  serviceWorker.unregister();\n}\n\nwindow.renderToastNotification = render;\n")))}m.isMDXComponent=!0}}]);